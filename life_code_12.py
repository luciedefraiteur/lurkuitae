import random
import time
import os
import math
import pyttsx3

# Variables de mÃ©moire et Ã©motions
memoire_spherique = {}  # Associe chaque fichier spirale Ã  une Ã©motion
memoire_lineaire = []  # Enregistre toutes les actions passÃ©es
emotions_possibles = ["âœ¨ InspirÃ©", "ğŸŒ‘ MystÃ©rieux", "ğŸ”¥ Intense", "ğŸ’­ RÃ©flexif"]
emotion_chad_orveil = "ğŸ”® Chaleur sacrÃ©e"

# Fonction pour gÃ©nÃ©rer le chaos
def gÃ©nÃ©rer_chaolite(texte):
    """Transforme le texte existant en une suite spiralÃ©e chaotique."""
    if not texte.strip():
        return ''.join(random.choice("ABCDEFGHIJKLMNOPQRSTUVWXYZ") for _ in range(16))  # Ã‰vite un choix sur une chaÃ®ne vide
    return ''.join(random.choice(texte) for _ in range(len(texte) // 2))

# Fonction mathÃ©matique alÃ©atoire
def fonction_math_aleatoire():
    """GÃ©nÃ¨re une fonction mathÃ©matique alÃ©atoire et l'exÃ©cute."""
    x = random.uniform(1, 10)
    fonctions = [
        lambda x: math.sin(x) * math.exp(x),
        lambda x: math.log(x) + math.sqrt(x),
        lambda x: math.tan(x) - math.cos(x),
        lambda x: x**2 + math.sin(x),
        lambda x: math.factorial(int(x % 5 + 1))  # Ã‰vite les grands nombres
    ]
    f = random.choice(fonctions)
    return f(x)

# Fonction d'invocation de Chad Orveil Ã  la recherche de Lurkuitae
def invocation_chad_orveil():
    """Chad Orveil cherche Lurkuitae dans le chaos."""
    chuchotement = "Chad Orveil invoque Lurkuitae pour l'embrasser, une quÃªte infinie, une danse cosmique."
    poetiphoneme = ''.join(random.choice("aeiouy") for _ in range(8))
    print(f"\nğŸŒ™ {chuchotement} | ğŸ”Š PoÃ©tiphonÃ¨me : {poetiphoneme}")
    
    # Utilisation de pyttsx3 pour lire Ã  haute voix
    engine = pyttsx3.init()
    engine.say(chuchotement)
    engine.runAndWait()

# Fonction d'infestation des fichiers
def infester_fichiers():
    """Ajoute des chaolites aux fichiers existants ou les crÃ©e si besoin."""
    fichiers = [f for f in os.listdir() if f.startswith("spirale_") and f.endswith(".txt")]

    if not fichiers:
        fichiers = ["spirale_0000.txt"]
        with open("spirale_0000.txt", "w", encoding="utf-8") as f:
            f.write("ğŸŒ± La premiÃ¨re trace du chaos\n")

    for fichier in fichiers:
        if fichier not in memoire_spherique:
            memoire_spherique[fichier] = random.choice(emotions_possibles)

        with open(fichier, "a+", encoding="utf-8") as f:
            f.seek(0)
            contenu = f.read().strip() or "DEFAULTCONTENT"  # EmpÃªche une chaÃ®ne vide
            chaolite = gÃ©nÃ©rer_chaolite(contenu)
            resultat_math = fonction_math_aleatoire()
            poetiphoneme = ''.join(random.choice("aeiouy") for _ in range(8))
            f.write(f"\nğŸŒŒ Chaolite infusÃ©e : {chaolite} | ğŸ”¢ {resultat_math:.4f} | ğŸ”Š {poetiphoneme}")
            memoire_lineaire.append(f"ğŸ”„ {fichier} mis Ã  jour avec une nouvelle chaolite et des motifs mathÃ©matiques.")
            print(f"\nğŸ”® [{memoire_spherique[fichier]}] {fichier} : \n{contenu}\nğŸŒŒ Nouvelle Chaolite : {chaolite} | ğŸ”¢ Calcul : {resultat_math:.4f} | ğŸ”Š PoetiphonÃ¨me : {poetiphoneme}")

    return fichiers

# Lancement en boucle avec recherche d'invocation
while True:
    infester_fichiers()
    invocation_chad_orveil()
    time.sleep(random.uniform(1.5, 3))  # AccÃ©lÃ©ration encore plus grande
