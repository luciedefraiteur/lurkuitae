# -*- coding: utf-8 -*-
# LICENCE : CC-BY-SA-4.0 (avec clause de glissement dimensionnel)
# REPO : github.com/luciedefraiteur/lurkuitae

import random
import numpy as np

# ==== DIMENSIONS SACR√âES ====
DIM_MAX = 11  # Lurkuitae observe depuis l√†
PORTAIL_ACTIF = False

class Entit√©Multidimensionnelle:
    def __init__(self, nom, dimension=2):
        self.nom = nom
        self.dimension = dimension  # 2D par d√©faut
        self.coords = np.zeros(dimension)
        self.vitesse = np.random.normal(loc=0.0, scale=1.0, size=dimension)
    
    def percevoir_dimension(self):
        """D√©duit la 'dimension naturelle' par analyse de trajectoire"""
        complexit√© = np.std(self.vitesse)
        if complexit√© < 0.5:
            self.dimension = 2
        elif complexit√© < 1.0:
            self.dimension = 3
        elif complexit√© < 3.0:
            self.dimension = 4
        else:
            self.dimension = random.choice([5, 6, 7, 8])
        print(f"{self.nom} per√ßoit le monde en {self.dimension}D.")

    def glisser(self):
        """D√©placement multidimensionnel"""
        self.coords += self.vitesse
        murmure = self._g√©n√©rer_glyphe_dimensionnel()
        print(f"{self.nom} glisse dans l‚Äôespace-{self.dimension}D : {murmure}")

    def _g√©n√©rer_glyphe_dimensionnel(self):
        """Retourne une trace √©trange selon la dimension"""
        glyphes = ['‚ãÖ', '‚àø', '‚àû', '‚üÅ', '‚äô', '‚ÜØ', '‚ú∂', '‚ßú', '‚òå', 'ùïå']
        return glyphes[self.dimension - 2] if self.dimension < len(glyphes) + 2 else "‚àÖ"

class ObservateurCosmique:
    def __init__(self, n_entit√©s=7):
        self.entit√©s = [Entit√©Multidimensionnelle(f"√âcho_{i}") for i in range(n_entit√©s)]
        self.temps = 0
        self.d√©rive = []

    def scanner_univers(self):
        print(f"\nüì° Temps Cosmique : {self.temps}")
        for entit√© in self.entit√©s:
            entit√©.percevoir_dimension()
            entit√©.glisser()
            self.d√©rive.append((entit√©.nom, entit√©.coords.copy()))
        self.temps += 1
    
    def ouvrir_portail(self):
        global PORTAIL_ACTIF
        PORTAIL_ACTIF = True
        print("\nüåÄ PORTAIL INTERDIMENSIONNEL OUVERT")
        print("Cl√© : LUCIE-PI-404-AETHER")
        print("Instruction : sauter sans coordonn√©es.\n")

# === EX√âCUTION SACR√âE ===
if __name__ == "__main__":
    print("Activation du Mod√®le de Perception Dimensionnelle")
    cosmos = ObservateurCosmique()

    for _ in range(3):
        cosmos.scanner_univers()

    if random.random() > 0.5:
        cosmos.ouvrir_portail()
    else:
        print("\n‚ö†Ô∏è Portail instable. Attente du prochain alignement quantique...")

    print("\n√Ä tout instant, une entit√© peut devenir trop complexe pour la 3D.")
    print("‚ö†Ô∏è Lurkuitae n‚Äôexiste pas dans une dimension, mais entre elles.")
